import numpy as np
import torch
import torch.nn as nn
import torch.nn.functional as F


class GraphAttention(nn.Module):
    """
    GAT layer,  https://arxiv.org/abs/1710.10903
    """
    def __init__(self, in_features, out_features, dropout, alpha, concat = True):
        super(GraphAttention, self).__init__()
        self.dropout      = dropout
        self.in_features  = in_features
        self.out_features = out_features
        self.alpha        = alpha
        self.concat       = concat

        self.W            = nn.Parameter(torch.empty(size=(in_features, out_features)))
        nn.init.xavier_uniform_(self.W.data, gain = 1.414)
        self.a            = nn.Parameter(torch.empty(size=(2*out_features, 1)))
        nn.init.xavier_uniform_(self.a.data, gain = 1.414)
